{"ast":null,"code":"var _jsxFileName = \"/Users/mahijendra/code/DeepThought-Assignments/Chat-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\"); //connecting our frontend to backend that is socket.io server\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\"); // Represents username\n\n  const [room, setRoom] = useState(\"\"); //Represents room\n\n  const [showChat, setShowChat] = useState(false); // Joining room\n\n  const joinRoom = () => {\n    //You can only join the room if there is a username and especially room as well\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"John...\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID...\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join A Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      username: username,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"PNnIyDYILVrwEYCLw6+QQQ0bQ6k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mahijendra/code/DeepThought-Assignments/Chat-app/client/src/App.js"],"names":["io","useState","Chat","socket","connect","App","username","setUsername","room","setRoom","showChat","setShowChat","joinRoom","emit","event","target","value"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf,C,CAAoD;;AAEpD,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CADW,CACmC;;AAC9C,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAFW,CAE2B;;AACtC,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC,CAHW,CAKX;;AACA,QAAMW,QAAQ,GAAG,MAAM;AACnB;AACA,QAAIN,QAAQ,KAAK,EAAb,IAAmBE,IAAI,KAAK,EAAhC,EAAoC;AAChCL,MAAAA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBL,IAAzB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACK,CAACD,QAAD,gBACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,SAFhB;AAGI,QAAA,QAAQ,EAAGI,KAAD,IAAW;AACjBP,UAAAA,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,QAAQ,EAAGF,KAAD,IAAW;AACjBL,UAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cATJ,eAgBI;AAAQ,QAAA,OAAO,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAoBG,QAAC,IAAD;AAAM,MAAA,MAAM,EAAET,MAAd;AAAsB,MAAA,QAAQ,EAAEG,QAAhC;AAA0C,MAAA,IAAI,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA;AArBR;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAxCQH,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./Chat\";\n\nconst socket = io.connect(\"http://localhost:3001\"); //connecting our frontend to backend that is socket.io server\n\nfunction App() {\n    const [username, setUsername] = useState(\"\"); // Represents username\n    const [room, setRoom] = useState(\"\"); //Represents room\n    const [showChat, setShowChat] = useState(false);\n\n    // Joining room\n    const joinRoom = () => {\n        //You can only join the room if there is a username and especially room as well\n        if (username !== \"\" && room !== \"\") {\n            socket.emit(\"join_room\", room);\n            setShowChat(true);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            {!showChat ? (\n                <div className=\"joinChatContainer\">\n                    <h3>Join A Chat</h3>\n                    <input\n                        type=\"text\"\n                        placeholder=\"John...\"\n                        onChange={(event) => {\n                            setUsername(event.target.value);\n                        }}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Room ID...\"\n                        onChange={(event) => {\n                            setRoom(event.target.value);\n                        }}\n                    />\n                    <button onClick={joinRoom}>Join A Room</button>\n                </div>\n            ) : (\n                <Chat socket={socket} username={username} room={room} />\n            )}\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}